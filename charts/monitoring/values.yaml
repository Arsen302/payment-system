kube-prometheus-stack:
  fullnameOverride: prometheus

  alertmanager:
    enabled: true
    config:
      global:
        resolve_timeout: 5m
      route:
        receiver: 'null'
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        group_by: ['alertname', 'job']
        routes:
          - match:
              severity: critical
            receiver: 'pager-duty-critical'
            continue: true
      receivers:
        - name: 'null'
        - name: 'pager-duty-critical'
          pagerduty_configs:
            - service_key: 'YOUR_PD_SERVICE_KEY'

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - alertmanager.payment-system.local
      tls: []

  grafana:
    enabled: true
    adminPassword: admin
    defaultDashboardsEnabled: true
    persistence:
      enabled: true
      size: 10Gi
    
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - grafana.payment-system.local
      tls: []
    
    additionalDataSources:
      - name: Loki
        type: loki
        url: http://loki:3100
        access: proxy
    
    dashboards:
      default:
        kubernetes-cluster:
          url: https://grafana.com/api/dashboards/7249/revisions/1/download
          datasource: Prometheus
        kubernetes-deployment:
          url: https://grafana.com/api/dashboards/8588/revisions/1/download
          datasource: Prometheus
        payment-service:
          file: dashboards/payment-service.json
        auth-service:
          file: dashboards/auth-service.json
        notification-service:
          file: dashboards/notification-service.json
    
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        searchNamespace: ALL

  prometheus:
    enabled: true
    
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - prometheus.payment-system.local
      tls: []
    
    prometheusSpec:
      retention: 10d
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: gp2
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
      
      additionalScrapeConfigs:
        - job_name: 'payment-service'
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
              action: keep
              regex: payment-service
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name
        
        - job_name: 'auth-service'
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
              action: keep
              regex: auth-service
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name
        
        - job_name: 'notification-service'
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
              action: keep
              regex: notification-service
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name

  kubeControllerManager:
    enabled: true
    
  kubeScheduler:
    enabled: true
    
  kubeProxy:
    enabled: true
    
  kubeEtcd:
    enabled: true
    
  defaultRules:
    create: true
    rules:
      alertmanager: true
      etcd: true
      configReloaders: true
      general: true
      k8s: true
      kubeApiserver: true
      kubeApiserverAvailability: true
      kubeApiserverError: true
      kubeApiserverSlos: true
      kubelet: true
      kubePrometheusGeneral: true
      kubePrometheusNodeAlerting: true
      kubePrometheusNodeRecording: true
      kubernetesAbsent: true
      kubernetesApps: true
      kubernetesResources: true
      kubernetesStorage: true
      kubernetesSystem: true
      network: true
      node: true
      prometheus: true
      prometheusOperator: true
      time: true

  nodeExporter:
    enabled: true

  kubelet:
    enabled: true 